__kernel void
grayscale_kernel ( __global const int * a ,
			       __global int * result )
{
	int i = get_global_id (0);
	const int ALPHA_MASK = 0xff000000;
	const int ALPHA_OFFSET = 24;
	const int RED_MASK = 0x00ff0000;
	const int RED_OFFSET = 16;
	const int GREEN_MASK = 0x0000ff00;
	const int GREEN_OFFSET = 8;
	const int BLUE_MASK = 0x000000ff;
	const int BLUE_OFFSET = 0;
	
	int pixel = a[i];
	
    int a = (pixel & ALPHA_MASK) >> ALPHA OFFSET;
	int r = (pixel & RED MASK) >> RED OFFSET;
	int g = (pixel & GREEN MASK) >> GREEN OFFSET;
	int b = (pixel & BLUE MASK) >> BLUE OFFSET;
	
	int gray = red ∗ 0.299 + green ∗ 0.587 + blue ∗ 0.114;

	int resultColor = (a << ALPHA OFFSET) |
					  (gray << RED OFFSET) |
	                  (gray << GREEN OFFSET) |
                      (gray << BLUE OFFSET);
	
	result[i] = resultColor;
}